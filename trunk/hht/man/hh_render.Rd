\name{hh_render}
\alias{hh_render}
\title{Render Hilbert spectrogram}
\description{
This function prepares results from the Hilbert transform of EMD or EEMD results for display using \code{\link{hhgram_image}}.
}
\usage{
hh_render(hres, dt, dfreq, time_span = NULL, freq_span = NULL, scaling = "none", 
    combine_imfs = TRUE, verbose = TRUE)  
}
\arguments{
\item{hres}{This is the output generated by \code{\link{eemd_compile}} or \code{\link{eemd_resift}}}
\item{dt}{Time resolution of spectrogram.  Must be greater than the sample rate of the time series to avoid gaps.}
\item{dfreq}{Frequency resolution of spectrogram}
\item{time_span}{Time span to render spectrogram over; \code{NULL} means over the whole time series}
\item{freq_span}{Frequency span to include in spectrogram; \code{NULL} means render all the frequencies in the time series}
\item{scaling}{If \code{"log"}, render a log frequency spectrogram.  Defaults to \code{"none"} (linear).}
\item{combine_imfs}{If \code{TRUE}, add the spectra for all IMS together in one ensemble Hilbert spectrogram, if \code{FALSE}, keep separate so you can investigate individual IMFs in \code{\link{hhgram_image}}.}
\item{verbose}{If \code{TRUE}, print progress messages}
}
\details{
\code{hh_render} processes Hilbert spectral data prior to displaying with \code{\link{hhgram_image}}.
\code{hh_render} returns the ensemble Hilbert spectrogram if \code{combine_imfs = TRUE}, otherwise it returns an IMF-by-IMF Hilbert spectrogram of dimensions \code{[time, freq, imf]}.
The user can then choose which IMFs to plot when he or she calls \code{\link{hhgram_image}}, but this makes \code{\link{hhgram_image}} run about 40x slower on my machine.
The tradeoff is in speed versus flexibility for \code{\link{hhgram_image}}; the \code{combine_imfs} option does not affect \code{hh_render} very much.
}

\note{The \code{hh_render} function also keeps track of which trial contributes what data to the spectrogram.
For the EMD, this does not make much sense, because there is only one trial.
However, when \code{hh_render} is run on EEMD results, it remembers which time/frequency bin gets data from each trial.
This is a way to distinguish between noise and signal in data:  signal is where multiple trials contribute data to the same time/frequency bin,
noise is where only one (or a couple) of trials contribute data.
See options for \code{\link{hhgram_image}} for ways to plot data based on signal stability.}
\value{ 
\item{hgram}{A data structure containing the spectrogram image and other information required by \code{\link{hhgram_image}}.}
}

\author{Daniel Bowman \email{daniel.bowman@unc.edu}}

\seealso{
\code{\link{eemd_compile}}, \code{\link{hhgram_image}}
}
\examples{
data(port_foster_event)

trials <- 10
nimf <- 10
noise_amp <- 6.4e-07
trials_dir <- "test"

set.seed(628)
#Run EEMD (this may take some time)
\dontrun{eemd(sig, tt, noise_amp, trials, nimf, noise_amp, trials_dir <- trials_dir)}

#Compile the results
\dontrun{eemd_result <- eemd_compile(trials_dir, trials, nimf)}

#Calculate spectrogram
dt <- 0.1
dfreq <- 0.1

\dontrun{hgram <- hh_render(eemd_result, dt, dfreq)}

#Plot spectrogram 
time_span <- c(5, 10)
freq_span <- c(0, 25)
amp_span <- c(1e-6, 2.5e-5)
\dontrun{hhgram_image(hgram, time_span = time_span, 
    freq_span = freq_span, amp_span = amp_span)}
}
\keyword{ts}
\keyword{hplot}
